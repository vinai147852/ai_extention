{
  "name": "copilot-mcp-bridge",
  "displayName": "Copilot MCP Bridge",
  "description": "A professional VS Code extension that bridges GitHub Copilot Chat with MCP servers for enhanced AI assistance",
  "version": "1.0.0",
  "publisher": "your-team",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "AI",
    "Chat",
    "Other"
  ],
  "keywords": [
    "copilot",
    "mcp",
    "ai",
    "chat",
    "assistant"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "chatParticipants": [
      {
        "id": "copilot-mcp-bridge",
        "name": "mcp",
        "description": "Enhanced AI assistant that bridges Copilot with MCP servers",
        "isSticky": true
      }
    ],
    "commands": [
      {
        "command": "copilot-mcp-bridge.configure",
        "title": "Configure MCP Server Settings",
        "category": "Copilot MCP Bridge"
      },
      {
        "command": "copilot-mcp-bridge.testConnection",
        "title": "Test MCP Server Connection",
        "category": "Copilot MCP Bridge"
      },
      {
        "command": "copilot-mcp-bridge.showLogs",
        "title": "Show Logs",
        "category": "Copilot MCP Bridge"
      },
      {
        "command": "copilot-mcp-bridge.toggle",
        "title": "Toggle Extension",
        "category": "Copilot MCP Bridge"
      },
      {
        "command": "copilot-mcp-bridge.showStatus",
        "title": "Show Status",
        "category": "Copilot MCP Bridge"
      }
    ],
    "configuration": {
      "title": "Copilot MCP Bridge",
      "properties": {
        "copilot-mcp-bridge.mcpServer.endpoint": {
          "type": "string",
          "default": "http://localhost:3000/mcp",
          "description": "MCP server endpoint URL",
          "pattern": "^https?://.+",
          "patternErrorMessage": "Must be a valid HTTP or HTTPS URL"
        },
        "copilot-mcp-bridge.mcpServer.timeout": {
          "type": "number",
          "default": 30000,
          "minimum": 1000,
          "maximum": 120000,
          "description": "Request timeout in milliseconds (1s - 2min)"
        },
        "copilot-mcp-bridge.mcpServer.retries": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "maximum": 5,
          "description": "Number of retry attempts on failure"
        },
        "copilot-mcp-bridge.authentication.type": {
          "type": "string",
          "enum": [
            "none",
            "bearer",
            "api-key",
            "basic"
          ],
          "default": "none",
          "description": "Authentication method for MCP server"
        },
        "copilot-mcp-bridge.authentication.token": {
          "type": "string",
          "default": "",
          "description": "Authentication token (stored securely)"
        },
        "copilot-mcp-bridge.authentication.headerName": {
          "type": "string",
          "default": "Authorization",
          "description": "Custom header name for authentication"
        },
        "copilot-mcp-bridge.httpClient.library": {
          "type": "string",
          "enum": [
            "fetch",
            "axios"
          ],
          "default": "fetch",
          "description": "HTTP client library to use"
        },
        "copilot-mcp-bridge.httpClient.userAgent": {
          "type": "string",
          "default": "VSCode-Copilot-MCP-Bridge/1.0.0",
          "description": "User agent string for HTTP requests"
        },
        "copilot-mcp-bridge.features.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable MCP server integration"
        },
        "copilot-mcp-bridge.features.includeWorkspaceContext": {
          "type": "boolean",
          "default": true,
          "description": "Include workspace information in MCP requests"
        },
        "copilot-mcp-bridge.features.includeActiveFile": {
          "type": "boolean",
          "default": true,
          "description": "Include active file content in MCP requests"
        },
        "copilot-mcp-bridge.logging.level": {
          "type": "string",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "default": "info",
          "description": "Logging level for extension output"
        },
        "copilot-mcp-bridge.logging.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Enable anonymous usage telemetry"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2"
  },
  "dependencies": {
    "axios": "^1.6.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-team/copilot-mcp-bridge"
  },
  "bugs": {
    "url": "https://github.com/your-team/copilot-mcp-bridge/issues"
  },
  "homepage": "https://github.com/your-team/copilot-mcp-bridge#readme",
  "license": "MIT"
}